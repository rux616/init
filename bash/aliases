#!/usr/bin/env bash
# aliases

# ------------------- #
# OS-specific Aliases #
# ------------------- #

if [[ "$(uname)" == "Darwin" ]]; then
    # Mac OS
    :
elif [[ "$(uname)" == "Linux" ]]; then
    # Linux
    if [[ -e "/var/log/syslog" ]]; then
        SYSTEMLOG="/var/log/syslog"
    else
        SYSTEMLOG="/var/log/messages"
    fi
    alias taillog="sudo tail -f -n 20 $SYSTEMLOG"
elif [[ "$(uname)" == "FreeBSD" ]]; then
    # FreeBSD
    :
fi



# ------------------------------- #
# Program-specific config aliases #
# ------------------------------- #

#wget
if command -v wget &>/dev/null; then
    mkdir -p "${XDG_CACHE_HOME}/wget"
    alias wget="wget --hsts-file=\"${XDG_CACHE_HOME}/wget/wget-hsts\""
fi
#trash-cli
if command -v trash-put &>/dev/null; then
    # if trash-cli is available, remind that it should be used instead
    alias rm="echo \"use 'trash' instead, or use '\\rm' if you really want it gone\"; false"
fi



# --------- #
# Functions #
# --------- #

# enable live grepping; useful for grepping things like "tail -f /var/log/messages"
# usage: just pipe into it
# example: tail -f /var/log/messages | livegrep -i " <server_name> "
livegrep() {
    grep --line-buffered $* | cat
}

# a better ls command
# https://www.topbug.net/blog/2016/11/28/a-better-ls-command/
if ls --color -d . >/dev/null 2>&1; then  # GNU ls
    unalias ls &>/dev/null
    export COLUMNS  # Remember columns for subprocesses.
    [[ "${TERM}" == "alacritty" ]] \
        && eval "$(TERM=xterm dircolors "${XDG_CONFIG_HOME}/bash/dircolors")" \
        || eval "$(dircolors "${XDG_CONFIG_HOME}/bash/dircolors")"
    function ls {
        command ls -F -h --color=always -v --author --time-style=long-iso -C "$@" | LESS="" less -R -X -F
    }
else
    alias ls='ls -G'
fi

git-merge-from-master() {
    if git branch --no-color 2>/dev/null | grep '^* master$' >/dev/null; then
        printf "can't merge from master to master!\n"
        return 2
    fi
    git fetch --tags --all --prune && \
        git checkout master && \
        git pull && \
        git checkout - && \
        git merge master -m "merge from master"
}

git-rebase-onto-master() {
    if git branch --no-color 2>/dev/null | grep '^* master$' >/dev/null; then
        printf "can't rebase master onto master!\n"
        return 2
    fi
    git fetch --tags --all --prune && \
        git checkout master && \
        git pull && \
        git checkout - && \
        git rebase master
}

ka() {
    kubectl $@ --all-namespaces
}



# --------------- #
# General Aliases #
# --------------- #

# ls
alias l="ls"
alias l1="ls -1"
alias ll="ls -l"
alias la="ls -a"
alias lla="ls -a -l"

# git
alias gftap="git fetch --tags --all --prune"

# kubectl
alias k="kubectl"
alias kevents="k get events --sort-by='{.lastTimestamp}' -owide"
alias kaevents="k get events --all-namespaces --sort-by='{.lastTimestamp}' -owide"

# terraform
alias tfinit='\rm -rf "./.terraform" && terraform init'

# other
alias vi="vim"
alias :q="exit"
alias myip="dig +short myip.opendns.com @resolver1.opendns.com"
